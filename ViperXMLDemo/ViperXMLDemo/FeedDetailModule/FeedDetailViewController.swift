//
//  FeedDetailViewController.swift
//  ViperXMLDemo
//
//  Created Gagan Vishal on 2019/08/08.
//  Copyright © 2019 Gagan Vishal. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import WebKit

class FeedDetailViewController: UIViewController {

    //MARK:- Add WKWebView
    let detailWebView: WKWebView = {
        let webView = WKWebView()
        return webView
    }()
    //IBOutlets
    @IBOutlet weak var activityIndicator: UIActivityIndicatorView!
    var presenter: FeedDetailPresenterProtocol?

    //MARK:- ViewController life cycle
	override func viewDidLoad() {
        super.viewDidLoad()
        //1.
        setupWKView()
        //2.
        presenter?.viewDidLoaded()
    }
    
    //MARK:- Setup webview
    private func setupWKView()
    {
        self.detailWebView.frame = self.view.bounds
        self.view.addSubview(self.detailWebView)
        self.detailWebView.navigationDelegate = self
        self.view.bringSubviewToFront(self.activityIndicator)
    }
}

//MARK:- FeedDetailViewProtocol
extension FeedDetailViewController: FeedDetailViewProtocol {
    func webViewStartLoading(with feed: FeedViewModel) {
         let request = URLRequest(url: feed.newFeedDeialLink)
         self.detailWebView.load(request)
    }
    
    func hideHudView() {
        DispatchQueue.main.async {[weak self] in
            self?.activityIndicator.stopAnimating()
        }
    }
    
    func showHudView() {
        self.activityIndicator.startAnimating()
    }
    
    func webViewLoadingFailed(error: Error) {
        DispatchQueue.main.async {[weak self] in
            let alertController = UIAlertController(title: "Error", message: "Error in loading feed", preferredStyle: .alert)
            let alertAction = UIAlertAction(title: "OK", style: .default, handler: nil)
            alertController.addAction(alertAction)
            self?.present(alertController, animated: true, completion: nil)
        }
    }
}

// MARK:- WKWebView delegates

extension FeedDetailViewController: WKNavigationDelegate {
    func webView(_ webView: WKWebView, didFinish navigation: WKNavigation!) {
        self.activityIndicator.stopAnimating()
    }
    
    func webView(_ webView: WKWebView, didFail navigation: WKNavigation!, withError error: Error) {
        self.activityIndicator.stopAnimating()
    }
}
